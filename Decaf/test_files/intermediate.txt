func begin factorial
	t1 = n
	t2 = 0
	t3 = t1 == t2
	ifFalse t3 goto L0
	t4 = 1
	return t4
	goto L1
L0:
	t5 = n
	t6 = n
	t7 = 1
	t8 = t6 - t7
	param t8
	call factorial, 1
	t9 = result
	t10 = 0
	t11 = 0
L2:
	t13 = t11 + t5
	t11 = t13
	t12 = t10 + 1
	t10 = t12
	if t10 < t9 goto L2
	t14 = t11
	return t14
L1:
func end
func begin OutputInt
func end
func begin InputInt
	t15 = 0
	return t15
func end
func begin ReturnNumber
	t16 = 0
	t17 = z[t16]
	return t17
func end
func begin main
	t18 = 0
	i = t18
	t19 = 0
	j = t19
	t20 = 3
	t21 = 0
	z[t21] = t20
L3:
	t22 = i
	t23 = 10
	t24 = t22 <= t23
	ifFalse t24 goto L4
	call InputInt, 0
	t25 = result
	t26 = j
	t27 = 0
	t28 = 0
	t29 = t28 * 20
	t30 = t27 + t29
	t31 = t26 * 24
	t32 = t31 + t30
	y[t32] = t25
	t33 = j
	t34 = 0
	t35 = 0
	t36 = t35 * 20
	t37 = t34 + t36
	t38 = t33 * 24
	t39 = t38 + t37
	t40 = y[t39]
	t41 = 5
	t42 = t40 == t41
	ifFalse t42 goto L5
	t43 = 0
	t44 = z[t43]
	t45 = j
	t46 = 0
	t47 = 0
	t48 = t47 * 20
	t49 = t46 + t48
	t50 = t45 * 24
	t51 = t50 + t49
	y[t51] = t44
	call ReturnNumber, 0
	t52 = result
	param t52
	call factorial, 1
	t53 = result
	k = t53
	t54 = k
	param t54
	call OutputInt, 1
	t55 = result
L5:
	t56 = j
	t57 = 0
	t58 = 0
	t59 = t58 * 20
	t60 = t57 + t59
	t61 = t56 * 24
	t62 = t61 + t60
	t63 = y[t62]
	param t63
	call factorial, 1
	t64 = result
	t65 = j
	t66 = 20
	t67 = 0
	t68 = 20 + t67
	t69 = t65 * 24
	t70 = t69 + t68
	y[t70] = t64
	t71 = j
	t72 = 20
	t73 = 0
	t74 = 20 + t73
	t75 = t71 * 24
	t76 = t75 + t74
	t77 = y[t76]
	param t77
	call OutputInt, 1
	t78 = result
	t79 = i
	t80 = 1
	t81 = t79 + t80
	i = t81
	goto L3
L4:
func end
